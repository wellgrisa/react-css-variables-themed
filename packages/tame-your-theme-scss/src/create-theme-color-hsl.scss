$default-hover: 0.5;

@mixin create-theme-color-complimentary(
  $color-name,
  $color-value,
  $hover: $default-hover
) {
  @include create-theme-color($color-name, $color-value, $hover);

  $complimentary-factor: 180deg;

  #{$color-name}-complimentary: hsl(
    calc(var(#{$color-name + "-h"}) - $complimentary-factor),
    var(#{$color-name + "-s"}),
    calc(var(#{$color-name + "-l"}))
  );
}

@mixin create-theme-color-triadic(
  $color-name,
  $color-value,
  $hover: $default-hover
) {
  @include create-theme-color($color-name, $color-value, $hover);

  $triadic-factor: 120deg;

  #{$color-name}-triadic-second-hue: hsl(
    calc(var(#{$color-name + "-h"}) + $triadic-factor),
    var(#{$color-name + "-s"}),
    calc(var(#{$color-name + "-l"}))
  );
  #{$color-name}-triadic-third-hue: hsl(
    calc(var(#{$color-name + "-h"}) + $triadic-factor * 2),
    var(#{$color-name + "-s"}),
    calc(var(#{$color-name + "-l"}))
  );
}

@mixin create-theme-color-tetradic(
  $color-name,
  $color-value,
  $hover: $default-hover
) {
  @include create-theme-color($color-name, $color-value, $hover);

  $tetradic-second-color: calc(var(#{$color-name + "-h"}) + 30deg);
  $tetradic-third-color: calc(var(#{$color-name + "-h"}) + 180deg);
  $tetradic-fourth-color: calc($tetradic-second-color + 180deg);

  #{$color-name}-tetradic-second-hue: hsl(
    $tetradic-second-color,
    var(#{$color-name + "-s"}),
    calc(var(#{$color-name + "-l"}))
  );
  #{$color-name}-tetradic-third-hue: hsl(
    $tetradic-third-color,
    var(#{$color-name + "-s"}),
    calc(var(#{$color-name + "-l"}))
  );
  #{$color-name}-tetradic-fourth-hue: hsl(
    $tetradic-fourth-color,
    var(#{$color-name + "-s"}),
    calc(var(#{$color-name + "-l"}))
  );
}

$analogous-factors: (
  "second": -60deg,
  "third": -30deg,
  "fourth": 30deg,
  "fifth": 60deg,
);

@mixin create-theme-color-analogous(
  $color-name,
  $color-value,
  $hover: $default-hover
) {
  @include create-theme-color($color-name, $color-value, $hover);

  @each $analogous-factor-name, $factor in $analogous-factors {
    #{$color-name}-analogous-#{$analogous-factor-name}-hue: hsl(
      calc(var(#{$color-name + "-h"}) + $factor),
      var(#{$color-name + "-s"}),
      calc(var(#{$color-name + "-l"}))
    );
  }
}

@mixin create-theme-color($color-name, $color-value, $hover: $default-hover) {
  #{$color-name}-h: hue($color-value);
  #{$color-name}-s: saturation($color-value);
  #{$color-name}-l: lightness($color-value);
  #{$color-name}: hsl(
    var(#{$color-name + "-h"}),
    var(#{$color-name + "-s"}),
    var(#{$color-name + "-l"})
  );
  #{$color-name}-hover: hsla(
    var(#{$color-name + "-h"}),
    var(#{$color-name + "-s"}),
    var(#{$color-name + "-l"}),
    $hover
  );
}

@mixin create-theme-by-hue($hue) {
  $complimentary-factor: 180;

  --hue: #{$hue};
  --complimentary-hue: calc(var(--hue) - 180);

  $common-hue-saturation: 25;

  --background-color: hsl(
    var(--hue),
    #{$common-hue-saturation + "%"},
    #{$common-hue-saturation * 2 + "%"}
  );
  --background-color-dark: hsl(
    var(--hue),
    #{$common-hue-saturation + "%"},
    #{$common-hue-saturation + "%"}
  );
  --button-background: hsl(
    var(--complimentary-hue),
    #{$common-hue-saturation + "%"},
    #{$common-hue-saturation * 2 + "%"}
  );
}

@function change-alpha($color-name, $opacity) {
  @return hsla(
    var(#{$color-name + "-h"}),
    var(#{$color-name + "-s"}),
    var(#{$color-name + "-l"}),
    $opacity
  );
}

@function darken-theme-color($color-name, $lightness) {
  @return change-lightness($color-name, -$lightness);
}

@function lighten-theme-color($color-name, $lightness) {
  @return change-lightness($color-name, $lightness);
}

@function change-lightness($color-name, $lightness) {
  @return hsl(
    var(#{$color-name + "-h"}),
    var(#{$color-name + "-s"}),
    calc(var(#{$color-name + "-l"}) + #{$lightness})
  );
}
