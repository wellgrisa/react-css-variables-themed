$default-hover: 0.5;

@mixin create-theme-color-complementary(
  $color-name,
  $color-value,
  $hover: $default-hover
) {
  @include create-theme-color($color-name, $color-value, $hover);

  $complementary-factor: 180deg;

  #{$color-name}-complementary: hsl(
    calc(var(#{$color-name + "-h"}) + $complementary-factor),
    var(#{$color-name + "-s"}),
    calc(var(#{$color-name + "-l"}))
  );
}

$triadic-factors: (
  "triadic-second-hue": 120deg,
  "triadic-third-hue": 240deg,
);

@mixin create-theme-color-triadic(
  $color-name,
  $color-value,
  $hover: $default-hover
) {
  @include create-theme-color($color-name, $color-value, $hover);
  @include create-theme-by-factors($color-name, $triadic-factors);
}

$tetradic-factors: (
  "tetradic-second-hue": 30deg,
  "tetradic-third-hue": 180deg,
  "tetradic-fourth-hue": 210deg,
);

@mixin create-theme-color-tetradic(
  $color-name,
  $color-value,
  $hover: $default-hover
) {
  @include create-theme-color($color-name, $color-value, $hover);
  @include create-theme-by-factors($color-name, $tetradic-factors);
}

$analogous-factors: (
  "analogous-second-hue": -60deg,
  "analogous-third-hue": -30deg,
  "analogous-fourth-hue": 30deg,
  "analogous-fifth-hue": 60deg,
);

@mixin create-theme-color-analogous(
  $color-name,
  $color-value,
  $hover: $default-hover
) {
  @include create-theme-color($color-name, $color-value, $hover);
  @include create-theme-by-factors($color-name, $analogous-factors);
}

$split-complementary-factors: (
  "split-complementary-second-hue": -150deg,
  "split-complementary-third-hue": 150deg,
);

@mixin create-theme-color-split-complementary(
  $color-name,
  $color-value,
  $hover: $default-hover
) {
  @include create-theme-color($color-name, $color-value, $hover);
  @include create-theme-by-factors($color-name, $split-complementary-factors);
}

@mixin create-theme-color($color-name, $color-value, $hover: $default-hover) {
  #{$color-name}-h: hue($color-value);
  #{$color-name}-s: saturation($color-value);
  #{$color-name}-l: lightness($color-value);
  #{$color-name}: hsl(
    var(#{$color-name + "-h"}),
    var(#{$color-name + "-s"}),
    var(#{$color-name + "-l"})
  );
  #{$color-name}-hover: hsla(
    var(#{$color-name + "-h"}),
    var(#{$color-name + "-s"}),
    var(#{$color-name + "-l"}),
    $hover
  );
}

@function change-alpha($color-name, $opacity) {
  @return hsla(
    var(#{$color-name + "-h"}),
    var(#{$color-name + "-s"}),
    var(#{$color-name + "-l"}),
    $opacity
  );
}

@mixin create-theme-by-factors($color-name, $factors) {
  @each $name, $factor in $factors {
    #{$color-name}-#{$name}: hsl(
      calc(var(#{$color-name + "-h"}) + $factor),
      var(#{$color-name + "-s"}),
      calc(var(#{$color-name + "-l"}))
    );
  }
}

@function darken-theme-color($color-name, $lightness) {
  @return change-lightness($color-name, -$lightness);
}

@function lighten-theme-color($color-name, $lightness) {
  @return change-lightness($color-name, $lightness);
}

@function change-lightness($color-name, $lightness) {
  @return hsl(
    var(#{$color-name + "-h"}),
    var(#{$color-name + "-s"}),
    calc(var(#{$color-name + "-l"}) + #{$lightness})
  );
}
